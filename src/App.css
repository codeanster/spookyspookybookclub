@tailwind base;
@tailwind components;
@tailwind utilities;

/* Your custom styles */
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #59ad0b;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes subtle-stars {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.7; }
}

@keyframes ethereal-tendrils {
  0%, 100% { transform: rotate(0deg) scale(1); }
  50% { transform: rotate(180deg) scale(1.1); }
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-10px) rotate(5deg); }
}

.cosmic-horror-background {
  background-color: #1b1d24; /* Or any color you want */
  position: relative;
  overflow: hidden;
}

.animate-subtle-stars {
  animation: subtle-stars 10s ease-in-out infinite;
  background-image: 
    radial-gradient(1px 1px at 20px 30px, #db2777, rgba(0,0,0,0)),
    radial-gradient(1px 1px at 40px 70px, #db2777, rgba(0,0,0,0)),
    radial-gradient(1px 1px at 50px 160px, #db2777, rgba(0,0,0,0)),
    radial-gradient(1px 1px at 90px 40px, #db2777, rgba(0,0,0,0)),
    radial-gradient(1px 1px at 130px 80px, #db2777, rgba(0,0,0,0)),
    radial-gradient(1px 1px at 160px 120px, #db2777, rgba(0,0,0,0));
  background-repeat: repeat;
  background-size: 200px 200px;
}

.animate-ethereal-tendrils {
  animation: ethereal-tendrils 30s linear infinite;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath d='M0 0 C20 20, 80 20, 100 0 S80 40, 100 50 S80 80, 100 100 S20 80, 0 100 S20 60, 0 50 S20 20, 0 0' fill='%23db2777' fill-opacity='0.05'/%3E%3C/svg%3E");
  background-size: 100px 100px;
}

.animate-float {
  animation: float ease-in-out infinite;
}

/* Add this new style for content sections */
.content-section {
  background-color: rgba(30, 33, 43, 0.8); /* Dark, slightly transparent background */
  backdrop-filter: blur(5px); /* Blur effect for depth */
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin-bottom: 20px;
}


/* Ensure the grid container forces all children to be the same height */
.grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* Two columns for your grid */
  gap: 2rem; /* Adjust the gap as needed */
}

/* Ensure all direct children of the grid take up full height */
.grid > div {
  display: flex;
  flex-direction: column;
  height: 100%; /* Make sure all grid items stretch to full height */
}

/* Image sizing */
.card img {
  width: 100%; /* Ensures image covers the full width */
  height: auto; /* Keeps aspect ratio */
  object-fit: cover;
  border-radius: 0.5rem;
}

.grid-container {
  min-height: 400px; /* Or whatever height you want to ensure */
  height: 100%;
}

body {
  background-color: #1b1d24; /* Change this to your desired background color */
  color: white; /* Optional: Ensures text remains readable */
}

.bg-gradient-to-b {
  background-color: #1b1d24 !important; /* Dark background color */
}


/* Ensure all cards are the same size */
.card {
  flex-grow: 1; /* Allow the card to grow to fill the grid space */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  padding: 1rem;
  background-color: #1e2029;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  border: 2px solid rgb(12, 11, 12); /* Adds a pink border */
}

/* styles.css */

/* General Styles */
body {
  font-family: 'Lora', serif;
  background-color: #1b1b1b;
  color: #e0e0e0;
  margin: 0;
  padding: 0;
}

h1,
h2 {
  color: #f5f5f5;
}

button {
  font-family: 'Lora', serif;
  padding: 10px 20px;
  border: none;
  cursor: pointer;
}

/* Quiz Container */
.quiz-container {
  max-width: 600px;
  margin: 50px auto;
  padding: 20px;
  background-color: #2b2b2b;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
}

.quiz-container h1 {
  text-align: center;
  margin-bottom: 30px;
}

/* Progress Bar */
.progress-bar {
  width: 100%;
  background-color: #3b3b3b;
  border-radius: 5px;
  overflow: hidden;
  margin-bottom: 20px;
}

.progress-bar-fill {
  height: 10px;
  background-color: #d32f2f;
  transition: width 0.3s ease;
}

/* Question */
.question {
  margin-bottom: 30px;
}

.question h2 {
  margin-bottom: 20px;
}

.options {
  display: flex;
  flex-direction: column;
}

.option-label {
  position: relative;
  padding-left: 35px;
  margin-bottom: 15px;
  cursor: pointer;
  user-select: none;
  font-size: 18px;
}

.option-label input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.custom-checkbox {
  position: absolute;
  left: 0;
  top: 0;
  height: 25px;
  width: 25px;
  background-color: #3b3b3b;
  border: 1px solid #757575;
  border-radius: 3px;
}

.option-label input:checked ~ .custom-checkbox {
  background-color: #d32f2f;
}

.option-label .custom-checkbox::after {
  content: '';
  position: absolute;
  display: none;
}

.option-label input:checked ~ .custom-checkbox::after {
  display: block;
}

.option-label .custom-checkbox::after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid #fff;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Navigation Buttons */
.navigation-buttons {
  display: flex;
  justify-content: space-between;
}

.prev-button,
.next-button {
  background-color: #d32f2f;
  color: #fff;
  border-radius: 5px;
}

.prev-button:hover,
.next-button:hover {
  background-color: #b71c1c;
}

/* Options Container */
.options-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

/* Options Column */
.options-column {
  flex: 0 0 48%; /* Adjust as needed to fit your layout */
}

/* Option Label */
.option-label {
  position: relative;
  display: block;
  padding-left: 35px;
  margin-bottom: 15px;
  cursor: pointer;
  user-select: none;
  font-size: 18px;
}

/* Input Styles */
.option-label input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Custom Checkbox */
.custom-checkbox {
  position: absolute;
  left: 0;
  top: 0;
  height: 25px;
  width: 25px;
  background-color: #3b3b3b;
  border: 1px solid #757575;
  border-radius: 3px;
}

/* Checked State */
.option-label input:checked ~ .custom-checkbox {
  background-color: #d32f2f;
}

/* Checkmark for Checkbox */
.option-label .custom-checkbox::after {
  content: '';
  position: absolute;
  display: none;
}

.option-label input:checked ~ .custom-checkbox::after {
  display: block;
}

.option-label .custom-checkbox::after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid #fff;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Responsive Design for Small Screens
@media (max-width: 600px) {
  .options-container {
    flex-direction: column;
  }

  .options-column {
    flex: 0 0 100%;
  }
} */
